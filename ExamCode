#! /usr/bin/python3
import subprocess

TaxonomyID="txid5859" #Enter query taxonomy ID in quotes. Do not leave blank as script will not run. 
Database="Protein" #Database to be searched. Protein, gene or nucleotide
GeneName=""
Protein=""
ProteinSpecific=False #If searching for a specific protein then True. Otherwise, False for protein family
EsearchOutput="esearch_output"

esearch_command="esearch"

if Database:
	esearch_command+=" -db " + Database

esearch_command+=" -query '" + TaxonomyID # Assumes TaxonomyID is never empty

if GeneName:
	esearch_command+=" AND (" + GeneName + "[Gene Name])"
	
if Protein:
	esearch_command+=" AND (" + Protein
	
	if ProteinSpecific:
		esearch_command+="[Protein]"

	esearch_command+=")"

esearch_command+="'"

subprocess.call(esearch_command + " | efetch -format fasta > " + EsearchOutput, shell=True)

print(str("Esearch complete. FASTA files ready for makeblastdb."))

BlastdbOutput="blastdb_output"
dbtype="prot"
subprocess.call("makeblastdb -in " + EsearchOutput + " -dbtype " + dbtype + " -out " + BlastdbOutput, shell=True) #Blast database created in preparation of BLAST alignment

NumAlignments="100"

Query=subprocess.call("esearch -db Protein -query '" + taxonomyID + "[Organism] AND (" + protein + protein_specific + ")' | efetch -format fasta > " + esearch_output, shell=True)
QueryType="Protein" #DNA or Protein. Nucleotide and Gene fall into the bracket of DNA.
DatabaseType="Protein" #DNA or Protein. Nucleotide and Gene fall into the bracket of DNA.
BlastOutput="blast_output"
if DatabaseType and QueryType=="DNA":
	subprocess.call("blastn -db " + BlastdbOutput + " -query " + Query + " -num_alignments " + NumAlignments + " -outfmt '6 sseqid' > " + BlastOutput , shell=True)
elif DatabaseType=="DNA" and QueryType=="Protein":
	subprocess.call("tblastn -db " + BlastdbOutput + " -query " + Query + " -num_alignments " + NumAlignments + " -outfmt '6 sseqid' > " + BlastOutput , shell=True)
elif DatabaseType=="Protein" and QueryType=="DNA":
	subprocess.call("blastx -db " + BlastdbOutput + " -query " + Query + " -num_alignments " + NumAlignments + " -outfmt '6 sseqid' > " + BlastOutput , shell=True)
elif DatabaseType and QueryType=="Protein":
	subprocess.call("blastp -db " + BlastdbOutput + " -query " + Query + " -num_alignments " + NumAlignments + " -outfmt '6 sseqid' > " + BlastOutput , shell=True)

